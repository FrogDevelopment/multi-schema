plugins {
    id 'java-library'
    id 'maven'
    id 'io.freefair.lombok' version '5.3.0' 
    id 'fr.brouillard.oss.gradle.jgitver' version '0.9.1' 
    id 'org.springframework.boot' version '2.3.4.RELEASE' 
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' 
}

sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14
repositories {
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'org.junit:junit-bom:5.7.0'
        mavenBom 'org.testcontainers:testcontainers-bom:1.14.3'
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR9'
    }
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'

    testRuntime 'org.junit.platform:junit-platform-runner'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    reports.html.enabled = false

    useJUnitPlatform {
        includeTags 'unitTest'
        includeTags 'integrationTest'
    }
}

compileJava.inputs.files(processResources)

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// To specify a license in the pom:
install {
    repositories.mavenInstaller {
        pom.project {
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}

jar {
    enabled true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jgitver {
    strategy = 'PATTERN'
    versionPattern = '${v}-SNAPSHOT'
    tagVersionPattern = '${v}'
}


wrapper {
    gradleVersion = '6.7'
    distributionType = Wrapper.DistributionType.ALL
}

def gitBranch() {
    def branch = ''
    def proc = 'git rev-parse --abbrev-ref HEAD'.execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}